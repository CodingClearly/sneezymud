OBJECT FILE CREATION

Created: Saturday, 12 Nov 1993
Modified: Sunday, 13 November 1994
          Tuesday, 6 Feb. 1996
OEDIT is the online object editor for creating new items for use in
the <h> world.  HELP OEDIT exists but may be poorly written or
out of date.

Use command: READ CHAPTER (#) OF OBJ where (#) is one of:
 1) Name                         2) Short Description
 3) Item Type                    4) Long Description
 5) Weight                       6) Volume
 7) Extra Flags                  8) Take Flags
 9) Unused                      10) Cost/Value
11) Four Values                 12) Decay time
13) Max struct points           14) Struct points
15) Extra Description           16) Material type
17) Applys                      18) Can be seen
19) Delete all extra descs      20) Special Procedures
21) Max_exists
22) A NOTE ON RACE AND ITEM SIZE
23) BUILDING POLICY GUIDELINES

Name

The name field is used mostly internally.  When the character types something
like, get (x), look at (x), wear (x) it searches the objects in the room
or inventory for a match of (x) and a word in the name field.

Thus, the name field is used to REFERENCE the object.  Do not confuse this
with the short_description though (see below).  They will be similar but 
not identical in most cases.

It is important to set the space separated list of names up in the correct 
order.  The FIRST word in the name field is used by the code in some
combat situations.  For instance, the item-damage code shows the first word
as follows:

Your (first-name of x) is damaged by Batopr's hit.

so...
You want to MAKE SURE that the first word is the most generic definition of
the object.  eg.  a huge long sword would have a name field of: sword huge long
eg. a platemail helmet would be: helmet platemail mail

NOTES:

NAMES AND ITEM CONDITION:  Do not use conditions in your item names..like 
"tattered robe" or "rusted shirt".  We have item condition so this will 
show as tattered robe (excellent) or rusted shirt (brand new).  Let item 
condition speak for itself.

UNIQUE NAMES:  It is *very* important that your item have the first 2 
words unique cause of some of the quirks of the shop code.  Shops can not 
distinguish between chainmail shirt and chainmail shirt hobbit.  The 
solution is to name it chainmail hobbit shirt.

REDUNDANT NAMES:  The code allows abbreviations, hence we don't need both 
"plate" and "platemail", but we do need "platemail" and "mail".

CAPITALIZATION AND TRIVIAL WORDS:  The name field should not be
capitalized.  Nor should there be trivial words like "of" "the" "a" "an"
etc in it. 

cost/value

This is the item's worth.  The code references this to determine how much
it can be bought or sold for, how much it costs to repair or sharpen.  It 
should both show what the pc will get for it and also reflect the value 
the builder and the mud puts on the object so you need to balance these 
figures very carefully.

The objects rent cost is 0.5 * cost per day.  Currently this figure shows 
up but is not used by code.

Any object set as cost 40000 or greater is an ARTIFACT.  Similarly, any
item intended to be an artifact should be valued at a cost greater than
40000.  Funny how that works :).  

There is no fixed formula for setting an items cost except for some item
types.  Moreover since all items have different characteristics, values
maybe slightly subjective.  However, there are the guidelines set by
existing objects in The World and you should try to fit your items into
The World. 

NOTES:

GIVE ALL ITEMS A VALUE:  Shops will not buy items whose value is <= 1
coin. Receptionists will not let items whose value is < 0 be rented.  You
should use the NO_RENT flag to set such items up if you are doing this
intentionally. 

CHECK VALUES:  Use the LOW command if you have it available or check your 
values against other objects in The World.
Four values

These are 4 separate integer values.  What they 4-values correspond to depends
on the items type.  For instance, a weapon references sharpness, damage and
weapon type; whereas bags need to know how much volume and weight can be put
into it.

The OEDIT editor will tell you what the 4 values reference.

Please use some caution when setting 4-value figures.  The code can become
confused by bogus values and it may cause a crash.


NOTES:

CHECK CAREFULLY: Make sure the items that require value setting have 
their values set after you make them.

ZERO VALUES IF YOU CHANGE ITEM TYPE OF AN OBJECT
decay time

This should be set on items that will rot or decay.  A value <0 means it
never decays.  Each decay unit corresponds to a half-tick (37.5 seconds in
a lag less world).

Decays should be set on all organic items and food.  This is a tool for 
enforcing circulation of items and can be used on magic items.
max structure

The maximum structure the item can have.  Structure corresponds to the 
strength of the item and how much damage it can take.  Damage and repair 
are some of the primary economic regulators of the mud so structure 
numbers should be looked at carefully.  

One of the most common errors is to equate AC and high structure. 
Although there will in general be a reasonable convergence, the two should
not be though of as identical.  Items can give good protection but damage
easily. 

The affect of this error in thinking is that there is a tendency to have 
high structures on robes and other non-tank items worn by casters.  Mana 
items must have considerably lower structure than tanking gear.  We do 
not want casters walking around in high AC, high mana, high structure items.
You must put in trade-offs between these three object features. 

You can use super low structure to make fragile items with decent affects 
that will circulate more than other items.  However, be aware that 
players tend to keep such items in bags and not wear them so do not think 
of a super low structure as a trade off for a big item affect.

NOTES:

CHECK YOUR FIGURES AGAINST ITEMS IN THE WORLD:  Pretty self explanatory.

ROBES AND OTHER MANA ITEMS:  Remember to set mana objects to lower 
structure than tanking items.  Keep structures reasonable.
current structure

The current structure the item has.  Unless you are going for an effect,
you should set this to the same number as the max structure.
extra descriptions

Used to store extra text associated with the object.  If you want something
shown when people look at (object) you must set up extra descriptions.  
This works similar to room extra descriptions except that all items 
should have extra descriptions of some kind even if it is just a sentence 
description.

The keyword is a space separated list of words used to reference the object.
ie, look at (x) where (x) must be in the extra-description's keyword list.  In general
the keywords should match the items name field.

ex:
name:  chest giant
short: A giant chest
extra desc-
  keywords: chest giant
The giant chest seems made of wood and is almost 5 feet tall.  On the front
is a brass latch.

extra desc-
  keywords: latch brass
The brass latch is as big as your arm.  It seems to conceal a small needle
with poison in it.


NOTES:

MAKE SURE YOU SET THEM: Every item should have an extra description set 
on it so players can look at the object.

CONFLICTS WITH ROOM EXTRA DESCRIPTIONS:  Make sure you check to make sure 
that there are no conflicts between your item extra descriptions and your 
room extras.

ZERO/DELETE ALL EXTRA DESCRIPTIONS BEFORE BUILDING THEM WHEN BUILDING FROM
A TEMPLATE
Material type

What the item is made from.  Material type affects the following:

compression ratio for bags
susceptibility to slash style attacks
susceptibility to blunt style attacks
susceptibility to pierce style attacks
susceptibility to fire style attacks
chance of and amount of object damage taken in falls
noise produced

Just set it appropriately and it'll be fine.
Applys

Applys are abilities or affects that accrue to whomever is using the item.
Applys only accrue if the item is worn or held.  Inventory doesn't count.

You should adjust the item cost depending on applys it has.

LIGHT: don't set this, make it (glow) and things will be set correctly.
The only time you should set this is if you are making a lamppost, etc

AC:   puts AC on the item
HIT:  adds hit points to the wearer
MANA: adds mana to the wearer (If you apply this, you need to set lower 
                               structure than you otherwise might)
SKILLS AND SPELLS: affects the wearer/use the skill or spell number 
                                (see help files)
IMMUNITIES: these are already set by material type already but you can add 
            some immunity affects if they make sense.
VISION: adds to the vision bonus of the wearer
CAN BE SEEN: adds to the can be seen of the wearer
TOHIT: alters characters ability to hit others in combat  (restrictions apply)
TODAM: alters amount of damage done in combat.  (restrictions)

slot:   TOHIT MAX      TODAM MAX
finger      3              3                 items greater then 1/2
hold/weapon 4              4                 the max must be made as
back        2              2                 artifacts.
hand        2              2
wrist       1              0
arm         1              0


NOTES:

APPLY_AC: Remember to give all worn items an apply_armor even if just 1

APPLY LIGHT: Do not set apply light on any item that is not a light. If 
you want the item to give off light, set its affect flag to glow.

APPLY SPARINGLY: Use applys other than apply AC sparingly.  

APPLY IMMUNITY : DO NOT SET THIS WITHOUT LOW CONSENT.

APPLY DISC : DO NOT SET THIS WITHOUT LOW CONSENT.
Can be Seen

This number is the minimum amount of light in the room necessary for the item
to show up.  Most items should be > 0.  Remember that setting the item glow
will automatically reduce the CBS.

Lanterns produce 7-10 units of light
Broad daylight is 25 units of light

NOTES:

SET REASONABLY: Only thing here is to set reasonably.
Delete all extra descriptions

Erases all extra descriptions associated with the item.  Some problems
have cropped up with this option in the past, use cautiously.

NOTES

ALWAYS DO THIS WHEN BUILDING FROM OTHER PEOPLES OBJECTS.
Short Description

The short description of the object is the shortest display of text that will
be used to indicate the object.  The short description is used by the 
code to refer to objects in most situations players will encounter except 
for seeing the item on the ground.  The player will primarily know an 
item by its short description name.

Don't confuse this with the name field.  Name is used to refer to the object,
short is used to display it.  eg

> get (name)    <-- looks for a match in the name field
You get (short)   <-- displays short to tell player what was gotten

Examples of good short descriptions would be:  a short sword, the painting 
of Batopr or an ivory breastplate.  Just plug in x for "You get x" when 
you make up your shorts. If it makes sense it is probably a decent short 
description.

NOTES:

LOWERCASE LETTERS:  Do not capitalize the words in a short description.
The code knows when to capitalize appropriately.  The only objects that 
are capitalized are artifacts.  One exception to this rule is for proper 
names. also, DON'T put things like periods on the end of the object.

ITEM CONDITION NAMES:  Do not used condition terms in your item names.  
You will get anomalies like "You get a rusty chainmail shirt (brand new) 
if you do.

Special Procedure

Special Procedures are a way of setting your mobs away from the common.
It involves coding and LOW permission to get a special procedure made for
a mob.  

There are some already coded special procedures you can use. You should
get permission to use anything unusual. 

In addition, there are additional special procedures on mobs that you
maybe aware of in The World. If you want one of your mobs to act like a
mob in The World (like a shopkeeper or merchant) ask the LOW to put a
procedure on your mob. 

Last, you can make your own special procedures by mob responses.  For
further information, read the quest response book.

Max Exist:

This controls how many of an item will be in world before an item will 
stop loading and before hunting code will be activated (if relevant).
This as well as structure and value are the key object values that most 
influence the mud economy.  Max_exist should be set according to how 
powerful an item is.  Simple items and general purpose items should be 
set unlimited (999).  Magic items of any power should be max_exist less 
than or equal to 5.  Super items should be set Max_exist=1  Other max_exist 
ranges are in the 20-30 range.

You should carefully examine The World for the max_exist of similar 
items in The World and set accordingly.  Make good use of LOW command and 
help files under policy.


NOTES:

RESTRICT ANY MAGIC ITEM:  You must set a limited max exist if you have 
set any form of apply other than simple AC.

SERIOUSLY RESTRICT ARTIFACT QUALITY ITEMS:  You must limit artifacts to 
less than 5 in world.

CONFORM YOUR MAX_EXISTS WITH ZONE FILE:  Your max exist should conform 
with your max exist in zone file.

CONFORM YOUR MAX_EXISTS WITH ZONE FILE PERCENT LOADS:  Low max_exist items
should *not* have hight percentage loads or load on a large number of 
mobs.  Simple math will show you if you have a max exist of 5 and you 
load it 40 percent of time on 12 different mobs, you will reach your max 
exist the first time some group clears a zone.  You should want your 
items to load sparingly for a long time or groups will just clear the 
zone the first week of production and then never come back.
Race and item sizing

The code does internal checks on item size and player size to determine if
a character can fit into an item.  Here's how the system works.

For any item worn (except neck, finger and wielded/held) it determines the
items percent size (%size).  Its %size is the ratio of its volume to a defined
100% size.  The 100% sizes are as follows:
  head:   2500        waist:    4000
  body:  11000        back:     2500
  arm:    2000        leg:      6000
  wrist:   400        foot:     1600
  hand:    800

If the item is paired (pants), it doubles the 100% value before calculating
the %size.

Next it calculates the characters %height.  A character's %height is HEIGHT
divided by 70 inches (average human male height).

A character can wear the item provided:

1.15 * %size > %height > %size * 0.85

The formula is actually this:

perc = height/70 * human-size
if vol > perc/0.85, too big
if vol < perc/1.15, too small



When MAKING objects, just do this.  Get the character that should be able to
wear its height, divide by 70.  Multiply this number by the 100% value listed
above and use the result as the objects volume.

NOTES:

PAIRED OBJECTS:  Remember to double volume

CONSISTENCY WITH MOB: Make sure the mob on which it will load is the 
right height to wear an object.
Building Policies:

Follows is a list of general rules, which the LOW has written as he comes
to it.

1.  Make robes for casters, armor for fighters
2.  Caster equipment should be lower structure than tanking gear if it
    contains mana.
3.  Mob stats are limited to 80 total.
4.  DO NOT set immunity or Discipline to items without the LOW consent.
item type

Item type determines what kind of an object it is.  It also changes what the
4-values (see below) will mean.  Pick the one that best applies from the 
OEDIT item type menu.

Some of these item types are obsolete, please ask if you use anything out
of the ordinary.
Long Description

The items long description is what is shown when the item is lying on
the ground.

It needs to be a complete sentence, starting with a capital letter and ending
with a period.  The standard is to have it fit on one line, although you
can certainly go over if need be, just make sure you allow for 80 character
screenwidths.

eg.
A large sword lies here.
Someone has left behind a perfectly good blackscale helmet.
In one corner of the room sits a oaken desk.

NOTES:

CONNECTION WITH SHORT DESCRIPTION AND NAME:  It should not be identical 
but give some clue how to manipulate the item meaning the long should 
contain all the elements of the short and the item name.
Weight

This is the items weight in pounds.  Please make an attempt to be accurate
in setting equipment weight.  Suits of platemail should weigh 50-70 pounds,
yet folks tend to make them lighter then air  :).  

For drink containers, this value should represent the container's EMPTY
weight.  Liquid weight is handled automatically.

Weapons should weigh 2*avg_base_damage of the weapon.  The relation 
between strength of pc and wield-ability is as follows:
  strength 3 to 17         : weight = strength
  strength 18/0            : weight = 20 lbs.
  strength 18/01 - 18/50   : weight = 22 lbs.
  strength 18/51 - 18/75   : weight = 24 lbs.
  strength 18/76 - 18/90   : weight = 26 lbs.
  strength 18/91 - 18/99   : weight = 28 lbs.
  strength 18/100          : weight = 30 lbs.
  strength 19              : weight = 32 lbs.
  strength 20+             : weight = 40 lbs.

(1) non-primary max weight is 1/2 the shown value.
(2) paired max weight is 3/2 the shown value.
(3) weapon proficiency may reduce the max weight to some degree.
(4) minimum max weight (regardless of strength/proficiency is 4 lbs).
(5) max weight for blunt weapons is 4/3 value shown.

NOTES:

COMMON BUILDER ERRORS:  Forgetting to set weight at all or setting 
totally unrealistic  weights.  Both add a lot of work to the balancing 
process.
Volume

The volume of an object is how much room it occupies. The main effect of
volume is that it determines the size of the item and thus, which race(s)
can wear an item.  The second effect is that volume determines the amount
of free space the item will take up in a players inventory. In this
regard, bags and chests have a built in compression ratio (based on
material type) that allows them to "fold the item up and squeeze it into a
bag". Please set the items volume off of the LARGEST size the item could
occupy and let the code do the compressing. 

We expect realistic volume setting.  Please be aware that 1 unit = 1 cubic
inch.  Hence something that is a foot on a side is 12 * 12 * 12 = 1728
units. Use some common sense when setting item volume and be accurate
about it. 

See the note about race and item size (below) to find out about setting 
armor size for particular races to wear..

NOTES:

COMMON BUILDER ERRORS:  Forgetting to set volume at all or setting 
totally unrealistic volume.  Both add a lot of work to the balancing 
process.

PAIRED ITEMS:  These require double volume of single items.

VOLUME:  Remember that volume sets which race can wear an item.

EXTRA FLAGS

Extra flags determine criteria that the item may have associated with it.
The ANTI-(x) stuff determines who is prevented from wearing the object.
A multi-class can wear an object provided that any one of their classes
is allowed to wear it.  The following are some flags that you will be 
able to set on an object with some explanation.

PAIRED: this causes the item to be worn in both left and right slots.  It is
   only valid for leg (pair of pants) and hold (2 handed sword).  You can't make
   a "pair of shoes", sorry.
GLOW: setting this bit causes the item to produce light.  (in proportion to
   its volume), adds the text "(glowing)" to the name and reduces the canbeseen
   This is the only way to set an object to providing light unless it is 
   explicitly item_type light.
SHADOWY: This is the opposite of Glow
NO_RENT & NO_PURGE: set these flags on all items you are using as furniture
   eq. shrubs, trees, desks, tables, beds, chests, rugs, statues, etc...
   Some items like keys should not be rent-able.
MAGIC: set this if the item has any special magic affects other than AC.
STRUNG: Mostly for internal record keeping.  Similar objects use shared
   memory for text strings.  This bit is set automatically whenever the
   strings are disassociated from heap memory.  It is unlikely that a
   builder will need to change this field ever.
PROTOTYPE: Set on all objects when OEDITed.  Prevents them from falling into
   mortal hands.  57th level gods can remove this bit for quests, etc.
Take flags:

This tells the mud where the item can be worn.  It is pretty 
self-explanatory.  The following are explanations of some of the flag 
options other than simple ones like on body.

TAKE:  This is important to have set.  Only objects set TAKE may be picked up.

THROW: Mostly for weapons.  Lets the weapon be thrown (using the ranged weapon
code).  Any weapon less then about 800 units in volume should be throw-able.
Others you may set as appropriate.

HOLD:  This refers to hands and hold-able.  Weapons need to be hold as do 
shields.

NOTES:

ONLY ONE SLOT:  DO NOT make items wearable in more then 1 slot.  ie, don't
have something wearable on the hands and the feet, as the code gets
confused. 

USE TRADITIONAL SLOTS:  Avoid making items worn in non-traditional slots. 
Cloaks are for the back, not the neck.  Shields are for hold, not the arm. 
etc. 

SET DAGGERS THROW-ABLE:  Make sure all weapons under 800 volume are 
throw-able unless there is a legitimate reason.
Unused

We don't use this number, why do you need help with it?
